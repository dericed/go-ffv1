package ffv1

// This file is automatically generated from pred.go using go generate
// Please DO NOT manually modify this file

func deriveBorders16(plane []uint16, x int, y int, width int, height int, stride int) (int, int, int, int, int, int) {
	var T int
	var L int
	var t int
	var l int
	var tr int
	var tl int

	pos := y*stride + x

	// This is really slow and stupid but matches the spec exactly. Each of the
	// neighbouring values has been left entirely separate, and none skipped,
	// even if they could be.
	//
	// Please never implement an actual decoder this way.

	// T
	if y > 1 {
		T = int(plane[pos-(2*stride)])
	}

	// L
	if y > 0 && x == 1 {
		L = int(plane[pos-stride-1])
	} else if x > 1 {
		L = int(plane[pos-2])
	}

	// t
	if y > 0 {
		t = int(plane[pos-stride])
	}

	// l
	if x > 0 {
		l = int(plane[pos-1])
	} else if y > 0 {
		l = int(plane[pos-stride])
	}

	// tl
	if y > 1 && x == 0 {
		tl = int(plane[pos-(2*stride)])
	} else if y > 0 && x > 0 {
		tl = int(plane[pos-stride-1])
	}

	// tr
	if y > 0 {
		tr = int(plane[pos-stride+min(1, width-1-x)])
	}

	return T, L, t, l, tr, tl
}
